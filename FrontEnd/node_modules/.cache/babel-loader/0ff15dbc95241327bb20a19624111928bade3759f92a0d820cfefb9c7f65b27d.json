{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\CS\\\\OAuth2Exercise-WADS\\\\FrontEnd\\\\src\\\\Login2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { UserContext } from \"./context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login2 = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [, setToken] = useContext(UserContext);\n  const submitLogin = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: JSON.stringify(`grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`)\n    };\n    const response = await fetch(\"http://localhost:8000/api/token\", requestOptions);\n    const data = await response.json();\n    if (!response.ok) {\n      //setErrorMessage(data.detail);\n    } else {\n      setToken(data.access_token);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitLogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        type: \"email\",\n        placeholder: \"Email\",\n        id: \"email\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        type: \"password\",\n        placeholder: \"Password\",\n        id: \"password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.onFormSwitch('register'),\n      children: \"Don't Have an Account yet? Register Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login2, \"w/NDp09MjyInwjaFYlHFw+Avc6E=\");\n_c = Login2;\nexport default Login2;\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useState","useContext","UserContext","jsxDEV","_jsxDEV","Login2","props","_s","email","setEmail","password","setPassword","setToken","submitLogin","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","access_token","handleSubmit","e","preventDefault","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","type","placeholder","id","name","onChange","target","onClick","onFormSwitch","_c","$RefreshReg$"],"sources":["C:/Users/Jay/CS/OAuth2Exercise-WADS/FrontEnd/src/Login2.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport { UserContext } from \"./context/UserContext\";\r\n\r\nexport const Login2 = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [, setToken] = useContext(UserContext);\r\n\r\n  const submitLogin = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: JSON.stringify(\r\n        `grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`\r\n      ),\r\n    };\r\n\r\n    const response = await fetch(\"http://localhost:8000/api/token\", requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      //setErrorMessage(data.detail);\r\n    } else {\r\n      setToken(data.access_token);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    submitLogin();\r\n  };\r\n\r\n  return (\r\n    <div className = 'auth-form-container'>\r\n      <form onSubmit = {handleSubmit}>\r\n        <label htmlFor = 'email'>Email</label>\r\n        <input\r\n          value = {email}\r\n          type = 'email'\r\n          placeholder = 'Email'\r\n          id = 'email'\r\n          name = 'email'\r\n          onChange = {(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor = 'password'>Password</label>\r\n        <input\r\n          value = {password}\r\n          type = 'password'\r\n          placeholder = 'Password'\r\n          id = 'password'\r\n          name = 'password'\r\n          onChange = {(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <button type = 'submit'>Log In</button>\r\n      </form>\r\n      \r\n      <button onClick={() => props.onFormSwitch('register')}>\r\n        Don't Have an Account yet? Register Here\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}